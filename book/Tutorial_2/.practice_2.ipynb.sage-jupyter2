{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-81666444-82f6-4641-aa88-d45726127273.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":14,"id":"78e056","input":"# It turns out there were *two* mistakes in the function! \n\ndef get_number_of_day(n):\n    d = (n - 1) % 7 # subract 1 from n\n    return d # changed from n to d\n\ndef get_day_of_week(n):\n    week_days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n    return week_days[n]\n\ndef get_day_of_week_from_number_of_year(n):\n    d = get_number_of_day(n)\n    s = get_day_of_week(d)\n    return s\n\n# should print 0\nget_number_of_day(1)\n\n# Should print \"Monday\"\nday = get_day_of_week_from_number_of_year(1)\nprint(day)\n\n\n","output":{"0":{"name":"stdout","output_type":"stream","text":"Monday\n"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"6f40ab","input":"#Two nested loops\n#Remember range(a, b) runs from a to b-1\nfor i in range(1, 11):\n    for j in range(1, 11):\n        print(i*j, end=\" \") # use the end argument to print a space rather than a new line\n    print() # print a new line after each iteration of the inner loop\n    \n    \n# NB to print it nicely with everything lined up requires a little more work.\n# we could do this with 'if' statements to print the correct number of spaces\n# or use a more advanced techniques such as string.format (which we haven't covered yet)","output":{"0":{"name":"stdout","output_type":"stream","text":"1 2 3 4 5 6 7 8 9 10 \n2 4 6 8 10 12 14 16 18 20 \n3 6 9 12 15 18 21 24 27 30 \n4 8 12 16 20 24 28 32 36 40 \n5 10 15 20 25 30 35 40 45 50 \n6 12 18 24 30 36 42 48 54 60 \n7 14 21 28 35 42 49 56 63 70 \n8 16 24 32 40 48 56 64 72 80 \n9 18 27 36 45 54 63 72 81 90 \n10 20 30 40 50 60 70 80 90 100 \n"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"9fa9b0","input":"import matplotlib.pyplot as plt\nimport numpy as np\n\n# function definitions\n\n# 1.\n\ndef draw_square():\n    draw_forward(1)\n    rotate_left(90)\n    draw_forward(1)\n    rotate_left(90)\n    draw_forward(1)\n    rotate_left(90)\n    draw_forward(1)\n    \n# 2.\n\ndef draw_polygon(n, dis):\n    for i in range(n):\n        draw_forward(dis)\n        rotate_left(360/n)\n\n# 3.\n\ndef draw_rotated_polygons(n, m):\n    for i in range(m):\n        draw_polygon(n, 1)\n        rotate_left(360/m)\n        \ndef start():\n    state[0] = 0\n    state[1] = 0\n    state[2] = 0\n    \n    plt.figure(figsize=(5,5))\n    plt.xlim(-2, 2)\n    plt.ylim(-2, 2) \n\ndef draw_forward(dis):\n    x = state[0]\n    y = state[1]\n    angle = state[2]\n    state[0] = x + dis * np.cos(angle)\n    state[1] = y + dis * np.sin(angle)\n    plt.plot([x, state[0]], [y, state[1]], color=\"black\", linewidth=2)\n    \ndef rotate_left(theta):\n    state[2] = state[2] + theta * np.pi / 180\n    \nstate = [0, 0, 0]\n\n# Turtle instructions\n\n# 1. NB mistake in question - should be draw_forward()\n    \nstart()\ndraw_forward(2)\nrotate_left(90)\ndraw_forward(2)\nrotate_left(90)\ndraw_forward(2)\nrotate_left(90)\ndraw_forward(2)\n\n# NB I've brought the call to start() outside the function\n# so that we can later chain these functions together\n\nstart()\ndraw_square()\n\n# 2. \nstart()\ndraw_polygon(6, 1)\n    \n# 3.\n\nstart()\ndraw_rotated_polygons(4, 5)\n","output":{"0":{"data":{"image/png":"4987f14c761f5f3da5f7c6c927d67acb60d2c98c","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":6,"metadata":{"image/png":{"height":306,"width":332},"needs_background":"light"},"output_type":"execute_result"},"1":{"data":{"image/png":"b3fcce80b39a1f179f1b5d76917a0825435db348","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":6,"metadata":{"image/png":{"height":306,"width":332},"needs_background":"light"},"output_type":"execute_result"},"2":{"data":{"image/png":"636e4d03584ed142f4bd86f9cc4d0dea51a031da","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":6,"metadata":{"image/png":{"height":306,"width":332},"needs_background":"light"},"output_type":"execute_result"},"3":{"data":{"image/png":"6862d02601278a2d60795f60c266bf842130b60d","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":6,"metadata":{"image/png":{"height":306,"width":332},"needs_background":"light"},"output_type":"execute_result"}},"pos":2,"type":"cell"}
{"cell_type":"markdown","id":"4e976c","input":"## Questions 1 - 3","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"509602","input":"# Practice 2","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"907c3c","input":"## Question 4\n\nCopy the three function definitions `get_number_of_day`, `get_day_of_week` and `print_day_of_week_from_number_of_year` from the notes. Correct the code so that it prints the day of the week correctly.","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"aaf612","input":"## Question 5","pos":5,"type":"cell"}
{"id":0,"time":1636122575193,"type":"user"}
{"last_load":1636122334840,"type":"file"}