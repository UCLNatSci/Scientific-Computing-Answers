{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-20b95d36-1952-4cfb-8870-4c27532482b7.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1639075477393,"exec_count":2,"id":"45e1b0","input":"import numpy as np\nx = np.array([[10, 12, 13],\n              [5, 6, 7]])\nrow_1 = x[0,:]\nprint(\"First row:\", row_1)\n\ncolumn_2 = x[:,2]\nprint(\"last column:\", column_2)\n\n\nsum_column = x[:,0] + x[:,1]  + x[:,2]\nprint(\"sum of columns:\", sum_column)\n\nsum_row = x[0,:] + x[1,:]\nprint(\"sum of rows:\", sum_row)","kernel":"python3","output":{"0":{"name":"stdout","text":"First row: [10 12 13]\nlast column: [13  7]\nsum of columns: [35 18]\nsum of rows: [15 18 20]\n"}},"pos":2,"start":1639075477384,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":9,"id":"ab9f4b","input":"import numpy as np\nimport matplotlib.pyplot as plt\n\nt = np.arange(0, 10, 0.1)\n\nx = 4 * np.sin(7*t)\ny = 4 * np.cos(6*t)\n\nplt.figure()\nplt.plot(x, t)\nplt.plot(y,t)\n\nplt.figure()\nplt.plot(x,y)\n","kernel":"python3","output":{"0":{"data":{"text/plain":"100"},"exec_count":9},"1":{"data":{"image/png":"fa65dddbe31b58fd9b1bc8ef2a8865b7acfcd25e","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":411,"width":703},"needs_background":"light"}},"2":{"data":{"image/png":"d1fbcaecda4defb3b65131b7a57d4c1fb7c68446","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":411,"width":705},"needs_background":"light"}}},"pos":4,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"89ba6e","input":"## Question 1","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"bed440","input":"## Question 3\n\n$r$ is the initial growth rate.\n$K$ is the 'carrying capacity' ie the maximum population.","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"de6ff1","input":"# Practice 5","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"fec9af","input":"## Question 2\n","pos":3,"type":"cell"}
{"end":1639076890651,"exec_count":13,"id":"b3fe37","input":"import numpy as np\nimport matplotlib.pyplot as plt\n\n# set parameter values\nr = 1\nK = 2000\nn_hours = 8\ninitial_population = 1000\n\n# create array of time points\nt = np.arange(0, n_hours, 1)\n\npop = np.zeros(n_hours)\npop[0] = initial_population\n\n# run simulation\nfor i in range(n_hours - 1):\n    pop[i+1] = pop[i] + r * (1 - pop[i] / K) * pop[i]\n    \nplt.plot(t, pop)","kernel":"python3","output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7f63a1472760>]"},"exec_count":13},"1":{"data":{"image/png":"4715b378d0341530a4604562e633eb653ce06e09","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":411,"width":716},"needs_background":"light"}}},"pos":5.5,"start":1639076890433,"state":"done","type":"cell"}
{"id":0,"time":1639075409998,"type":"user"}
{"last_load":1639075410954,"type":"file"}